# Copyright 2021 The Bellman Contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[tool.poetry]
name = "bellman"
version = "0.1.0"
description = "Model Based Reinforcement Learning"
authors = ["The Bellman Contributors <bellman-devs@protonmail.com>"]
packages = [{include = "bellman"}]
classifiers = [
    'License :: Apache-2.0'
]

# Note: Poetry will exclude files declared in .gitignore when creating the python package file.


[tool.poetry.dependencies]
python = "^3.7"
gym = "0.17.2"
tensorflow = "2.4.0"
tensorflow-probability = "0.12.1"
tf-agents = "0.7.1"
matplotlib = "3.2.1"
imageio = "2.8.0"
imageio-ffmpeg = "0.4.2"
mujoco-py = { version = "<2.1,>=2.0", optional = true }

[tool.poetry.dev-dependencies]
mypy = "0.711"
pylint = "2.3.1"
pytest = "^5.3.5"
pytest-cov = "^2.9.0"
pytest-mock = "3.1.0"
pytest-mypy = "^0.6.2"
pytest-pylint = "^0.17.0"
taskipy = "^1.2.0"
pytest-black = "^0.3.11"
black = { version = "*", allow-prereleases = true }
pytest-isort = "^1.0.0"

[tool.poetry.extras]
mujoco-py = ["mujoco-py"] 

[tool.taskipy.tasks]
lint = "pytest --pylint --cache-clear -m pylint -v && pytest --pylint --cache-clear -m pylint --pylint-rcfile=extrapylint bellman"
mypy = "pytest --mypy --cache-clear -m mypy -v"
quicktest = "pytest -x --ff -rN -Wignore"
test = "pytest --pylint --mypy --black --isort --cache-clear -ra -v --cov bellman --cov-report term --cov-report xml --cov-report html:cover_html --junitxml=reports/junit.xml -o junit_family=xunit2 && pytest --pylint --cache-clear -m pylint --pylint-rcfile=extrapylint bellman"
slow_tests = "pytest --runslow"
black = "black ."
isort = "isort --atomic -y"
format = "task isort && task black"
check_format = "pytest -v --cache-clear --black --isort -m black,isort"
docsgen = "cd docs && make html"
docsserve = "cd docs && python -m http.server"
docsview = "xdg-open http://localhost:8000/_build/html/"

[tool.black]
line-length = 95
target-version = ['py37']

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
line_length = 95

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
